# Example environment variables

# DJANGO VARS
SECRET_KEY='super-duper-secret-Gs'

## DEBUG-mode will only be on if this is set to TRUE
DEBUG=TRUE

## set the locations of different types of django file storage.
STATIC_ROOT=static/
MEDIA_ROOT=media/
PROTECTED_ROOT=protected/

# Required for production, not development. Django checks that requests
# are coming from the right host.
# Currently the app's only set up to use one ALLOWED_HOST here.
ALLOWED_HOSTS=mysite.mydomain.com

# Use this if django is behind a proxy, like in the docker-compose setup in deployment/.
# Django will validate requests against the forwarded host name, not just the host name the proxy sends.
USE_X_FORWARDED_HOST=TRUE

# For setting up Postgres
# Postgres docker container uses this as the root `postgres` user password.
POSTGRES_PASSWORD=whateverYouWant

# Vars for connecting to Postgres
PSQL_USER=myname
PSQL_PW=mypass
PSQL_HOST=127.0.0.1
PSQL_NAME=recordlibdb

# vars for building images and pushing them to a container registry.
#   These should be in a .env file at the protect root. 
#   Makefile needs them to build push to docker, and
#   docker-compose needs them to know what containers to use to start services.
#   You need to load the env vars before using makefile (using `pipenv shell`), 
#   but docker-compose will, by default read whatever .env file is in the directory
#   its running from. 
CONTAINER_REGISTRY=natev
CONTAINER_TAG=latest

# URL to the docket scraper api, that searches cpcms.
# when running locally via `flask run` in dev, it listens by default on 5000
# when running via a docker container, it listens on 8800
DOCKET_SCRAPER_URL=http://localhost:5678




# vars for testing

# only really test network calls when necessary.
REAL_NETWORK_TESTS=FALSE # TRUE
# you can test searches with a real name this way.
UJS_SEARCH_TEST_FNAME=Joe
UJS_SEARCH_TEST_LNAME=Normal
UJS_SEARCH_TEST_DOB=2000-01-01