version: "3.7"
# Pull the latest versions of the images, without building locally.
services:
  frontend:
    image: natev/recordlibfrontend:latest
    restart: always
    ports:
      - "3000:80"
    depends_on:
      - django_web
    env_file:
      - .docker.env
    volumes:
      - type: volume
        source: staticfiles
        target: /srv/static
        read_only: true
      - type: volume
        source: protectedfiles
        target: /protected
        read_only: true
    networks:
      recordlib-net:
  django_web:
    image: natev/recordlibdjango:latest
    expose:
      - 8000
    volumes:
      - "staticfiles:/srv/static"
      - "protectedfiles:/protected"
    networks:
      recordlib-net:
    env_file:
      - .docker.env
    environment:
      - PSQL_HOST=pg_db
    depends_on:
      - migration
      - pg_db
    command: bash -c "python manage.py collectstatic --noinput && gunicorn backend.wsgi:application --bind 0.0.0.0:8000 --workers 4"
  migration:
    image: natev/recordlibdjango:latest
    restart: on-failure
    env_file:
      - .docker.env
    environment:
      - PSQL_HOST=pg_db
    networks:
      recordlib-net:
    command: bash -c "python manage.py migrate --noinput && python manage.py init_petitions && python manage.py init_admin"
    depends_on:
      - pg_db
  pg_db:
    build:
      context: .
      dockerfile: PG_Dockerfile
    image: natev/recordlibdb:latest
    restart: always
    env_file:
      - .docker.env
    networks:
      recordlib-net:
    expose:
      - "5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
networks:
  recordlib-net:
volumes:
  dbdata:
  staticfiles:
  protectedfiles:
