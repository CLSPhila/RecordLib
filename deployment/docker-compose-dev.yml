# This docker-compose is for locally building and running the RecordLib web services.
# N.B. It currently doesn't rebuild the frontend live, but it does allow for live editing of the
# backend.
version: "3.7"
services:
  frontend:
    build:
      context: .
      dockerfile: FrontendDockerfile
    image: natev/recordlibfrontend
    restart: always
    ports:
      - "3000:80"
    depends_on:
      - django_web
    volumes:
      - type: volume
        source: staticfiles
        target: /srv/static
        read_only: true
      - type: volume
        source: media
        target: /srv/media
        read_only: true
    env_file:
      - .docker.env
    networks:
      recordlib-net:
  django_web:
    build:
      context: ../
      dockerfile: deployment/DjangoDockerfile
    image: natev/recordlibdjango
    expose:
      - 8000
    volumes:
      - type: volume
        source: media
        target: /srv/media
      - "staticfiles:/static"
      - type: bind
        source: ../
        target: /srv
    networks:
      recordlib-net:
    env_file:
      - .docker.env
    environment:
      - DEBUG=TRUE
      - PSQL_HOST=pg_db
    depends_on:
      - migration
      - pg_db
    command: python manage.py runserver 0.0.0.0:8000
  migration:
    build:
      context: ../
      dockerfile: deployment/DjangoDockerfile
    image: natev/recordlibdjango
    restart: on-failure
    networks:
      recordlib-net:
    volumes:
      - type: volume
        source: media
        target: /srv/media

    command: bash -c "python manage.py migrate --noinput && python manage.py init_petitions && python manage.py init_admin"
    env_file:
      - .docker.env
    environment:
      - PSQL_HOST=pg_db
    depends_on:
      - pg_db
  django_q:
    build:
      context: ../
      dockerfile: deployment/DjangoDockerfile
    image: natev/recordlibdjango
    restart: always
    env_file:
      - .docker.env
    environment:
      - PSQL_HOST=pg_db
      - MAKO_MODULE_DIR=/mako
    networks:
      recordlib-net:
    command: python manage.py qcluster
    depends_on:
      - migration
    volumes:
      # tmpfs volume for mako's auto-generated modules.
      - type: volume
        source: mako
        target: /mako

  pg_db:
    build:
      context: .
      dockerfile: PG_Dockerfile
    image: natev/recordlibdb
    restart: always
    networks:
      recordlib-net:
    expose:
      - "5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
    env_file:
      - .docker.env
networks:
  recordlib-net:
volumes:
  dbdata:
  staticfiles:
  mako:
  media:
